---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  noIndex?: boolean;
}

const { 
  title, 
  description = "Velvet Quill - Where passion meets prose. A sophisticated literary collective for erotic and romance writers.",
  image = "/velvet-quill-og.jpg",
  noIndex = false 
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="canonical" href={canonicalURL} />
  
  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  {noIndex && <meta name="robots" content="noindex, nofollow" />}
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.url)} />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.url)} />
  
  <!-- Theme Color -->
  <meta name="theme-color" content="#4A0E4E" />
  
  <!-- Preload Critical Resources -->
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400;1,600&family=Inter:wght@300;400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'" />
  
  <!-- Styles -->
  <style is:global>
    @import '../styles/global.scss';
  </style>
</head>

<body>
  <!-- Skip to main content for accessibility -->
  <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-gold-ink text-midnight-black px-4 py-2 rounded-md z-50">
    Skip to main content
  </a>
  
  <!-- Background ambiance -->
  <div class="fixed inset-0 pointer-events-none z-0">
    <div class="absolute inset-0 bg-gradient-to-br from-velvet-dark via-midnight-black to-velvet-dark opacity-20"></div>
    <div class="absolute inset-0 bg-[url('/paper-texture.png')] opacity-5"></div>
  </div>
  
  <!-- Main content -->
  <main id="main-content" class="relative z-10">
    <slot />
  </main>
  
  <!-- Footer -->
  <footer class="relative z-10 bg-midnight-black border-t border-blush-rose/20 py-12">
    <div class="container">
      <div class="grid grid-2 gap-8">
        <div>
          <h3 class="text-gold-ink mb-4">Velvet Quill</h3>
          <p class="text-sm opacity-70 mb-4">
            A sophisticated literary collective where passion meets prose. 
            Join writers who craft stories that stir the soul and ignite the imagination.
          </p>
          <div class="flex space-x-4">
            <a href="#" class="text-rose hover:text-gold-ink transition-colors">
              <span class="sr-only">Newsletter</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
              </svg>
            </a>
            <a href="#" class="text-rose hover:text-gold-ink transition-colors">
              <span class="sr-only">Twitter</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"/>
              </svg>
            </a>
            <a href="#" class="text-rose hover:text-gold-ink transition-colors">
              <span class="sr-only">Instagram</span>
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <rect x="2" y="2" width="20" height="20" rx="5" ry="5"/>
                <path d="m16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37z"/>
                <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"/>
              </svg>
            </a>
          </div>
        </div>
        
        <div>
          <h4 class="text-blush-rose mb-4">Quick Links</h4>
          <nav class="space-y-2">
            <a href="#authors" class="block text-sm hover:text-gold-ink transition-colors">Featured Authors</a>
            <a href="#salons" class="block text-sm hover:text-gold-ink transition-colors">Upcoming Salons</a>
            <a href="#reading-room" class="block text-sm hover:text-gold-ink transition-colors">Reading Room</a>
            <a href="#join" class="block text-sm hover:text-gold-ink transition-colors">Join the Collective</a>
          </nav>
        </div>
      </div>
      
      <div class="border-t border-blush-rose/20 mt-8 pt-8 text-center text-sm opacity-60">
        <p>&copy; 2024 Velvet Quill Literary Collective. All rights reserved.</p>
        <p class="mt-2">Crafted with passion and precision for writers who dare to dream.</p>
      </div>
    </div>
  </footer>
  
  <!-- Scripts -->
  <script>
    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
    
    // Add subtle parallax effect to background
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      const rate = scrolled * -0.5;
      const backgrounds = document.querySelectorAll('.parallax-bg');
      backgrounds.forEach(bg => {
        bg.style.transform = `translateY(${rate}px)`;
      });
    });
    
    // Intersection Observer for scroll animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in-up');
        }
      });
    }, observerOptions);
    
    // Observe all sections for animations
    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });
  </script>
</body>
</html>

<style>
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  
  .focus\:not-sr-only:focus {
    position: static;
    width: auto;
    height: auto;
    padding: 0.5rem 1rem;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
</style>